# 用户注册业务逻辑分析
#     用户获取注册页面 -> 发起注册请求 -> 注册视图接收请求(提取参数、校验参数[防止直接越过注册界面发起恶意注册]( -> 错误响应错误信息)、保存注册数据、状态保持) -> 响应注册结果

# 用户注册接口的设计和定义
#     对于接口设计,要根据具体业务逻辑设计出适合业务逻辑接口
#     设计接口基本思路
#     1)分析要实现的业务逻辑
#         明确在这个业务中设计到几个相关子业务(注册中的判断用户名是否重复注册、判断手机号是否重复注册、图形验证码、短信验证码均为相关子业务)
#         将每个子业务当做一个接口来设计
#     2)分析接口的功能任务,明确接口的访问方式和返回数据
#         请求方法(GET、POST、PUT、DELETE)
#         请求地址
#         请求参数(路径参数、查询字符串[?后面]、表单、JSON)
#         响应数据(HTML、JSON等)

# 用户注册接口设计
#     1)请求方式
#         请求方法    POST
#         请求地址    /register/
#     2)请求参数(表单)
#     username    string      yes           用户名
#     password    string      yes           密码
#     cfirmpsw    string      yes           确认密码
#     mobie       string      yes           短信验证码
#     allow       string      yes           是否同意用户协议
#     3)响应结果HTML
#         register.html
#     注册失败            响应错误提示
#     注册成功            重定向到首页

# 用户注册接口定义
#     1)注册视图
#     2)总路由
#     3)子路由
